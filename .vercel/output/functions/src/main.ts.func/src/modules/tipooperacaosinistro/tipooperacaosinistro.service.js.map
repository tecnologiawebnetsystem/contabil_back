{"version":3,"file":"tipooperacaosinistro.service.ts","sources":["C:\\repos\\contabil_back\\src\\modules\\tipooperacaosinistro\\tipooperacaosinistro.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA+D;AAC/D,6CAAmD;AACnD,qCAAqC;AACrC,wFAA8E;AAKvE,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IACtC,YAEmB,8BAAgE;QAAhE,mCAA8B,GAA9B,8BAA8B,CAAkC;IAChF,CAAC;IAEJ,KAAK,CAAC,MAAM,CAAC,6BAA4D;QACvE,MAAM,uBAAuB,GAAG,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,6BAA6B,CAAC,CAAC;QAC1G,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC3E,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAO;QACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvF,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,0BAAiB,CAAC,iCAAiC,EAAE,aAAa,CAAC,CAAC;QAChF,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO,EAAE,6BAA4D;QAChF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,6BAA6B,CAAC,CAAC;QAC3G,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,iCAAiC,EAAE,aAAa,CAAC,CAAC;QAChF,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO;QAClB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5E,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,iCAAiC,EAAE,aAAa,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;CACF,CAAA;AArCY,kEAA2B;sCAA3B,2BAA2B;IADvC,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,0BAAgB,EAAC,kDAAoB,CAAC,CAAA;qCACU,oBAAU;GAHlD,2BAA2B,CAqCvC","sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Tipooperacaosinistro } from './entities/tipooperacaosinistro.entity';\nimport { CreateTipooperacaosinistroDto } from './dto/create-tipooperacaosinistro.dto';\nimport { UpdateTipooperacaosinistroDto } from './dto/update-tipooperacaosinistro.dto';\n\n@Injectable()\nexport class TipooperacaosinistroService {\n  constructor(\n    @InjectRepository(Tipooperacaosinistro)\n    private readonly tipooperacaosinistroRepository: Repository<Tipooperacaosinistro>,\n  ) {}\n\n  async create(createTipooperacaosinistroDto: CreateTipooperacaosinistroDto): Promise<Tipooperacaosinistro> {\n    const newTipooperacaosinistro = this.tipooperacaosinistroRepository.create(createTipooperacaosinistroDto);\n    return this.tipooperacaosinistroRepository.save(newTipooperacaosinistro);\n  }\n\n  async findAll(): Promise<Tipooperacaosinistro[]> {\n    return this.tipooperacaosinistroRepository.find();\n  }\n\n  async findOne(id: any): Promise<Tipooperacaosinistro> {\n    const found = await this.tipooperacaosinistroRepository.findOne({ where: { id: id } });\n    if (!found) {\n      throw new NotFoundException(`Tipooperacaosinistro with id \"${id}\" not found`);\n    }\n    return found;\n  }\n\n  async update(id: any, updateTipooperacaosinistroDto: UpdateTipooperacaosinistroDto): Promise<Tipooperacaosinistro> {\n    const result = await this.tipooperacaosinistroRepository.update({ id: id }, updateTipooperacaosinistroDto);\n    if (result.affected === 0) {\n      throw new NotFoundException(`Tipooperacaosinistro with id \"${id}\" not found`);\n    }\n    return this.findOne(id);\n  }\n\n  async remove(id: any): Promise<void> {\n    const result = await this.tipooperacaosinistroRepository.delete({ id: id });\n    if (result.affected === 0) {\n      throw new NotFoundException(`Tipooperacaosinistro with id \"${id}\" not found`);\n    }\n  }\n}\n"]}