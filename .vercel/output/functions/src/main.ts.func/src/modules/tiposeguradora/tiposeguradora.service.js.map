{"version":3,"file":"tiposeguradora.service.ts","sources":["C:\\repos\\contabil_back\\src\\modules\\tiposeguradora\\tiposeguradora.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA+D;AAC/D,6CAAmD;AACnD,qCAAqC;AACrC,4EAAkE;AAK3D,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAChC,YAEmB,wBAAoD;QAApD,6BAAwB,GAAxB,wBAAwB,CAA4B;IACpE,CAAC;IAEJ,KAAK,CAAC,MAAM,CAAC,uBAAgD;QAC3D,MAAM,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;QACxF,OAAO,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAO;QACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,0BAAiB,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;QAC1E,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO,EAAE,uBAAgD;QACpE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC;QAC/F,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;QAC1E,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO;QAClB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACtE,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;CACF,CAAA;AArCY,sDAAqB;gCAArB,qBAAqB;IADjC,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,0BAAgB,EAAC,sCAAc,CAAC,CAAA;qCACU,oBAAU;GAH5C,qBAAqB,CAqCjC","sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Tiposeguradora } from './entities/tiposeguradora.entity';\nimport { CreateTiposeguradoraDto } from './dto/create-tiposeguradora.dto';\nimport { UpdateTiposeguradoraDto } from './dto/update-tiposeguradora.dto';\n\n@Injectable()\nexport class TiposeguradoraService {\n  constructor(\n    @InjectRepository(Tiposeguradora)\n    private readonly tiposeguradoraRepository: Repository<Tiposeguradora>,\n  ) {}\n\n  async create(createTiposeguradoraDto: CreateTiposeguradoraDto): Promise<Tiposeguradora> {\n    const newTiposeguradora = this.tiposeguradoraRepository.create(createTiposeguradoraDto);\n    return this.tiposeguradoraRepository.save(newTiposeguradora);\n  }\n\n  async findAll(): Promise<Tiposeguradora[]> {\n    return this.tiposeguradoraRepository.find();\n  }\n\n  async findOne(id: any): Promise<Tiposeguradora> {\n    const found = await this.tiposeguradoraRepository.findOne({ where: { id: id } });\n    if (!found) {\n      throw new NotFoundException(`Tiposeguradora with id \"${id}\" not found`);\n    }\n    return found;\n  }\n\n  async update(id: any, updateTiposeguradoraDto: UpdateTiposeguradoraDto): Promise<Tiposeguradora> {\n    const result = await this.tiposeguradoraRepository.update({ id: id }, updateTiposeguradoraDto);\n    if (result.affected === 0) {\n      throw new NotFoundException(`Tiposeguradora with id \"${id}\" not found`);\n    }\n    return this.findOne(id);\n  }\n\n  async remove(id: any): Promise<void> {\n    const result = await this.tiposeguradoraRepository.delete({ id: id });\n    if (result.affected === 0) {\n      throw new NotFoundException(`Tiposeguradora with id \"${id}\" not found`);\n    }\n  }\n}\n"]}