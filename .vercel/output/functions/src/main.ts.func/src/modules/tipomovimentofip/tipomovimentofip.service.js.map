{"version":3,"file":"tipomovimentofip.service.ts","sources":["C:\\repos\\contabil_back\\src\\modules\\tipomovimentofip\\tipomovimentofip.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA+D;AAC/D,6CAAmD;AACnD,qCAAqC;AACrC,gFAAsE;AAK/D,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAClC,YAEmB,0BAAwD;QAAxD,+BAA0B,GAA1B,0BAA0B,CAA8B;IACxE,CAAC;IAEJ,KAAK,CAAC,MAAM,CAAC,yBAAoD;QAC/D,MAAM,mBAAmB,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;QAC9F,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACnE,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAO;QACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,0BAAiB,CAAC,6BAA6B,EAAE,aAAa,CAAC,CAAC;QAC5E,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO,EAAE,yBAAoD;QACxE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,yBAAyB,CAAC,CAAC;QACnG,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,6BAA6B,EAAE,aAAa,CAAC,CAAC;QAC5E,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO;QAClB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACxE,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,6BAA6B,EAAE,aAAa,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;CACF,CAAA;AArCY,0DAAuB;kCAAvB,uBAAuB;IADnC,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,0BAAgB,EAAC,0CAAgB,CAAC,CAAA;qCACU,oBAAU;GAH9C,uBAAuB,CAqCnC","sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Tipomovimentofip } from './entities/tipomovimentofip.entity';\nimport { CreateTipomovimentofipDto } from './dto/create-tipomovimentofip.dto';\nimport { UpdateTipomovimentofipDto } from './dto/update-tipomovimentofip.dto';\n\n@Injectable()\nexport class TipomovimentofipService {\n  constructor(\n    @InjectRepository(Tipomovimentofip)\n    private readonly tipomovimentofipRepository: Repository<Tipomovimentofip>,\n  ) {}\n\n  async create(createTipomovimentofipDto: CreateTipomovimentofipDto): Promise<Tipomovimentofip> {\n    const newTipomovimentofip = this.tipomovimentofipRepository.create(createTipomovimentofipDto);\n    return this.tipomovimentofipRepository.save(newTipomovimentofip);\n  }\n\n  async findAll(): Promise<Tipomovimentofip[]> {\n    return this.tipomovimentofipRepository.find();\n  }\n\n  async findOne(id: any): Promise<Tipomovimentofip> {\n    const found = await this.tipomovimentofipRepository.findOne({ where: { id: id } });\n    if (!found) {\n      throw new NotFoundException(`Tipomovimentofip with id \"${id}\" not found`);\n    }\n    return found;\n  }\n\n  async update(id: any, updateTipomovimentofipDto: UpdateTipomovimentofipDto): Promise<Tipomovimentofip> {\n    const result = await this.tipomovimentofipRepository.update({ id: id }, updateTipomovimentofipDto);\n    if (result.affected === 0) {\n      throw new NotFoundException(`Tipomovimentofip with id \"${id}\" not found`);\n    }\n    return this.findOne(id);\n  }\n\n  async remove(id: any): Promise<void> {\n    const result = await this.tipomovimentofipRepository.delete({ id: id });\n    if (result.affected === 0) {\n      throw new NotFoundException(`Tipomovimentofip with id \"${id}\" not found`);\n    }\n  }\n}\n"]}