{"version":3,"file":"configuracoes_seguradora.service.ts","sources":["C:\\repos\\contabil_back\\src\\modules\\configuracoes_seguradora\\configuracoes_seguradora.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA+D;AAC/D,6CAAmD;AACnD,qCAAqC;AACrC,gGAAsF;AAK/E,IAAM,+BAA+B,GAArC,MAAM,+BAA+B;IAC1C,YAEmB,kCAAwE;QAAxE,uCAAkC,GAAlC,kCAAkC,CAAsC;IACxF,CAAC;IAEJ,KAAK,CAAC,MAAM,CAAC,iCAAoE;QAC/E,MAAM,2BAA2B,GAAG,IAAI,CAAC,kCAAkC,CAAC,MAAM,CAAC,iCAAiC,CAAC,CAAC;QACtH,OAAO,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IACnF,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,CAAC,kCAAkC,CAAC,IAAI,EAAE,CAAC;IACxD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAO;QACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,kCAAkC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3F,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,0BAAiB,CAAC,qCAAqC,EAAE,aAAa,CAAC,CAAC;QACpF,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO,EAAE,iCAAoE;QACxF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kCAAkC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,iCAAiC,CAAC,CAAC;QACnH,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,qCAAqC,EAAE,aAAa,CAAC,CAAC;QACpF,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAO;QAClB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kCAAkC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAChF,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,IAAI,0BAAiB,CAAC,qCAAqC,EAAE,aAAa,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;CACF,CAAA;AArCY,0EAA+B;0CAA/B,+BAA+B;IAD3C,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,0BAAgB,EAAC,0DAAwB,CAAC,CAAA;qCACU,oBAAU;GAHtD,+BAA+B,CAqC3C","sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Configuracoes_seguradora } from './entities/configuracoes_seguradora.entity';\nimport { CreateConfiguracoes_seguradoraDto } from './dto/create-configuracoes_seguradora.dto';\nimport { UpdateConfiguracoes_seguradoraDto } from './dto/update-configuracoes_seguradora.dto';\n\n@Injectable()\nexport class Configuracoes_seguradoraService {\n  constructor(\n    @InjectRepository(Configuracoes_seguradora)\n    private readonly configuracoes_seguradoraRepository: Repository<Configuracoes_seguradora>,\n  ) {}\n\n  async create(createConfiguracoes_seguradoraDto: CreateConfiguracoes_seguradoraDto): Promise<Configuracoes_seguradora> {\n    const newConfiguracoes_seguradora = this.configuracoes_seguradoraRepository.create(createConfiguracoes_seguradoraDto);\n    return this.configuracoes_seguradoraRepository.save(newConfiguracoes_seguradora);\n  }\n\n  async findAll(): Promise<Configuracoes_seguradora[]> {\n    return this.configuracoes_seguradoraRepository.find();\n  }\n\n  async findOne(id: any): Promise<Configuracoes_seguradora> {\n    const found = await this.configuracoes_seguradoraRepository.findOne({ where: { id: id } });\n    if (!found) {\n      throw new NotFoundException(`Configuracoes_seguradora with id \"${id}\" not found`);\n    }\n    return found;\n  }\n\n  async update(id: any, updateConfiguracoes_seguradoraDto: UpdateConfiguracoes_seguradoraDto): Promise<Configuracoes_seguradora> {\n    const result = await this.configuracoes_seguradoraRepository.update({ id: id }, updateConfiguracoes_seguradoraDto);\n    if (result.affected === 0) {\n      throw new NotFoundException(`Configuracoes_seguradora with id \"${id}\" not found`);\n    }\n    return this.findOne(id);\n  }\n\n  async remove(id: any): Promise<void> {\n    const result = await this.configuracoes_seguradoraRepository.delete({ id: id });\n    if (result.affected === 0) {\n      throw new NotFoundException(`Configuracoes_seguradora with id \"${id}\" not found`);\n    }\n  }\n}\n"]}